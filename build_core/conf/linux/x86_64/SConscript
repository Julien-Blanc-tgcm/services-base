# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0

# 

Import('env')

vars = Variables()
vars.Add(BoolVariable('TSAN', 'Enable Thread Sanitizer runtime checks', 'no'))
vars.Add(BoolVariable('IGNORE_STRICT', 'Ignore strict compiler warnings', 'no'))
vars.Update(env)

# Linux specific flags

# Force 64-bit builds
env.Append(CXXFLAGS=['-m64', '-fPIC'])
env.Append(CFLAGS=['-m64', '-fPIC'])
env.Append(LINKFLAGS=['-m64'])

# Thread sanitizer control
if env['TSAN']:
   env.Append(CFLAGS = ['-fno-omit-frame-pointer', '-fasynchronous-unwind-tables', '-funwind-tables', '-fsanitize=thread', '-fPIE'])
   env.Append(CXXFLAGS = ['-fno-omit-frame-pointer', '-fasynchronous-unwind-tables', '-funwind-tables', '-fsanitize=thread', '-fPIE'])
   env.Append(LINKFLAGS = ['-fsanitize=thread', '-pie'])
#   if env['CXX'] != 'clang':
#      env.AppendUnique(LIBS = ['tsan'])

if env['IGNORE_STRICT']:
   env.Append(CXXFLAGS=['-Wno-error'])
   env.Append(CFLAGS=['-Wno-error'])